// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ObandoGamboaFabricio.Data;

#nullable disable

namespace ObandoGamboaFabricio.Migrations
{
    [DbContext(typeof(appDbContext))]
    [Migration("20250526184419_TerceraTienda")]
    partial class TerceraTienda
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ObandoGamboaFabricio.Models.Categoria", b =>
                {
                    b.Property<int>("id_categoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_categoria"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("nombre_categoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id_categoria");

                    b.ToTable("Categorias", (string)null);
                });

            modelBuilder.Entity("ObandoGamboaFabricio.Models.Ciudades", b =>
                {
                    b.Property<int>("id_ciudad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_ciudad"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("nombre_ciudad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id_ciudad");

                    b.ToTable("Ciudades", (string)null);
                });

            modelBuilder.Entity("ObandoGamboaFabricio.Models.DetallesPedido", b =>
                {
                    b.Property<int>("id_detalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_detalle"));

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("id_pedido")
                        .HasColumnType("int");

                    b.Property<int>("id_producto")
                        .HasColumnType("int");

                    b.Property<double>("precio_unitario")
                        .HasColumnType("float");

                    b.HasKey("id_detalle");

                    b.HasIndex("id_pedido");

                    b.HasIndex("id_producto");

                    b.ToTable("DetallesPedidos", (string)null);
                });

            modelBuilder.Entity("ObandoGamboaFabricio.Models.Direccion", b =>
                {
                    b.Property<int>("id_direccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_direccion"));

                    b.Property<string>("codigo_postal")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("id_ciudad")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int>("id_usuario")
                        .HasColumnType("int");

                    b.Property<string>("pais")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("provincia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_direccion");

                    b.HasIndex("id_ciudad");

                    b.HasIndex("id_usuario");

                    b.ToTable("Direcciones", (string)null);
                });

            modelBuilder.Entity("ObandoGamboaFabricio.Models.EstadosDeCompra", b =>
                {
                    b.Property<int>("id_estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_estado"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("nombre_estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id_estado");

                    b.ToTable("EstadosDeCompra", (string)null);
                });

            modelBuilder.Entity("ObandoGamboaFabricio.Models.Metodo_Pago", b =>
                {
                    b.Property<int>("id_metodo_pago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_metodo_pago"));

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<int>("detalles")
                        .HasColumnType("int");

                    b.Property<int>("id_usuario")
                        .HasColumnType("int");

                    b.Property<int>("tipo")
                        .HasColumnType("int");

                    b.HasKey("id_metodo_pago");

                    b.HasIndex("id_usuario");

                    b.ToTable("Metodos_Pago", (string)null);
                });

            modelBuilder.Entity("ObandoGamboaFabricio.Models.Pedido", b =>
                {
                    b.Property<int>("id_pedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_pedido"));

                    b.Property<DateOnly>("fecha_pedido")
                        .HasColumnType("date");

                    b.Property<int>("id_estado")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<int>("id_repartidor")
                        .HasColumnType("int");

                    b.Property<int>("id_usuario")
                        .HasColumnType("int");

                    b.Property<int>("total")
                        .HasColumnType("int");

                    b.HasKey("id_pedido");

                    b.HasIndex("id_estado");

                    b.HasIndex("id_repartidor");

                    b.HasIndex("id_usuario");

                    b.ToTable("Pedidos", (string)null);
                });

            modelBuilder.Entity("ObandoGamboaFabricio.Models.Producto", b =>
                {
                    b.Property<int>("id_producto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_producto"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly>("fecha_agregado")
                        .HasColumnType("date");

                    b.Property<int>("id_categoria")
                        .HasColumnType("int");

                    b.Property<int>("id_proveedor")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("precio")
                        .HasColumnType("float");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.HasKey("id_producto");

                    b.HasIndex("id_categoria");

                    b.HasIndex("id_proveedor");

                    b.ToTable("Productos", (string)null);
                });

            modelBuilder.Entity("ObandoGamboaFabricio.Models.Proveedores", b =>
                {
                    b.Property<int>("id_proveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_proveedor"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("nombre_proveedor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id_proveedor");

                    b.ToTable("Provedores", (string)null);
                });

            modelBuilder.Entity("ObandoGamboaFabricio.Models.Repartidor", b =>
                {
                    b.Property<int>("id_repartidor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_repartidor"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("nombre_repatidor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id_repartidor");

                    b.ToTable("Repartidor");
                });

            modelBuilder.Entity("ObandoGamboaFabricio.Models.Resena", b =>
                {
                    b.Property<int>("id_resena")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_resena"));

                    b.Property<int>("calificacion")
                        .HasColumnType("int");

                    b.Property<string>("comentario")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateOnly>("fecha")
                        .HasColumnType("date");

                    b.Property<int>("id_producto")
                        .HasColumnType("int");

                    b.Property<int>("id_usuario")
                        .HasColumnType("int");

                    b.HasKey("id_resena");

                    b.HasIndex("id_producto");

                    b.HasIndex("id_usuario");

                    b.ToTable("Resenas", (string)null);
                });

            modelBuilder.Entity("ObandoGamboaFabricio.Models.Usuarios", b =>
                {
                    b.Property<int>("id_usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_usuario"));

                    b.Property<string>("ApellidoUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateOnly>("FecInicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("rol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id_usuario");

                    b.HasIndex("Correo")
                        .IsUnique();

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("ObandoGamboaFabricio.Models.DetallesPedido", b =>
                {
                    b.HasOne("ObandoGamboaFabricio.Models.Pedido", "pedido")
                        .WithMany("detalles_pedidos")
                        .HasForeignKey("id_pedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ObandoGamboaFabricio.Models.Producto", "producto")
                        .WithMany("detalles_pedido")
                        .HasForeignKey("id_producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pedido");

                    b.Navigation("producto");
                });

            modelBuilder.Entity("ObandoGamboaFabricio.Models.Direccion", b =>
                {
                    b.HasOne("ObandoGamboaFabricio.Models.Ciudades", "ciudad")
                        .WithMany("Direcciones")
                        .HasForeignKey("id_ciudad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ObandoGamboaFabricio.Models.Usuarios", "usuario")
                        .WithMany("direcciones")
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ciudad");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("ObandoGamboaFabricio.Models.Metodo_Pago", b =>
                {
                    b.HasOne("ObandoGamboaFabricio.Models.Usuarios", "usuario")
                        .WithMany("metodos_pago")
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("ObandoGamboaFabricio.Models.Pedido", b =>
                {
                    b.HasOne("ObandoGamboaFabricio.Models.EstadosDeCompra", "estado")
                        .WithMany("Pedidos")
                        .HasForeignKey("id_estado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ObandoGamboaFabricio.Models.Repartidor", "repatidor")
                        .WithMany("Pedidos")
                        .HasForeignKey("id_repartidor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ObandoGamboaFabricio.Models.Usuarios", "usuario")
                        .WithMany("pedidos")
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("estado");

                    b.Navigation("repatidor");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("ObandoGamboaFabricio.Models.Producto", b =>
                {
                    b.HasOne("ObandoGamboaFabricio.Models.Categoria", "categoria")
                        .WithMany("Productos")
                        .HasForeignKey("id_categoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ObandoGamboaFabricio.Models.Proveedores", "proveedor")
                        .WithMany("Productos")
                        .HasForeignKey("id_proveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categoria");

                    b.Navigation("proveedor");
                });

            modelBuilder.Entity("ObandoGamboaFabricio.Models.Resena", b =>
                {
                    b.HasOne("ObandoGamboaFabricio.Models.Producto", "producto")
                        .WithMany("resenas")
                        .HasForeignKey("id_producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ObandoGamboaFabricio.Models.Usuarios", "usuario")
                        .WithMany("resenas")
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("producto");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("ObandoGamboaFabricio.Models.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("ObandoGamboaFabricio.Models.Ciudades", b =>
                {
                    b.Navigation("Direcciones");
                });

            modelBuilder.Entity("ObandoGamboaFabricio.Models.EstadosDeCompra", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("ObandoGamboaFabricio.Models.Pedido", b =>
                {
                    b.Navigation("detalles_pedidos");
                });

            modelBuilder.Entity("ObandoGamboaFabricio.Models.Producto", b =>
                {
                    b.Navigation("detalles_pedido");

                    b.Navigation("resenas");
                });

            modelBuilder.Entity("ObandoGamboaFabricio.Models.Proveedores", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("ObandoGamboaFabricio.Models.Repartidor", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("ObandoGamboaFabricio.Models.Usuarios", b =>
                {
                    b.Navigation("direcciones");

                    b.Navigation("metodos_pago");

                    b.Navigation("pedidos");

                    b.Navigation("resenas");
                });
#pragma warning restore 612, 618
        }
    }
}
